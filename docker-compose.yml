version: "3.9"

services:
  db:
    image: postgres:14.1
    container_name: postgres
    environment:
      - POSTGRES_DB=gooanalysis
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 'pg_pass'
    ports:
      - "5050:80"


  django:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: django
    command: ./docker/web_entrypoint.sh
    environment:
      - DATABASE_URL=psql://user:password@db:5432/gooanalysis
      - CELERY_BROKER_URL=redis://cache:6379/0
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - cache
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    # command: celery -A gooanalysis.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    container_name: worker
    command: bash -c "python manage.py setup_periodic_tasks && ./docker/celery_entrypoint.sh"
    environment:
      - DATABASE_URL=psql://user:password@db:5432/gooanalysis
      - CELERY_BROKER_URL=redis://cache:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - cache
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    # command: celery -A gooanalysis.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    container_name: beats
    command: bash -c "python manage.py setup_periodic_tasks && ./docker/beats_entrypoint.sh"
    environment:
      - DATABASE_URL=psql://user:password@db:5432/gooanalysis 
      - CELERY_BROKER_URL=redis://cache:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - cache
    restart: on-failure

  cache:
    image: redis:alpine
    container_name: redis

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=gooanalysis
      - MB_DB_PORT=5432
      - MB_DB_USER=user
      - MB_DB_PASS=password
      - MB_DB_HOST=db
    depends_on:
      - db
    volumes:
      - metabase-data:/metabase-data


volumes:
  postgres-data:
  metabase-data: